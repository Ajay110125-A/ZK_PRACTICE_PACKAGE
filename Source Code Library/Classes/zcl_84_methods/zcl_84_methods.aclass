CLASS zcl_84_methods DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_oo_adt_classrun .
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS ZCL_84_METHODS IMPLEMENTATION.


  METHOD if_oo_adt_classrun~main.

    DATA connection TYPE REF TO lcl_connection.
    DATA : connections TYPE TABLE OF REF TO lcl_connection.

    connection = NEW #(  ).
    TRY.
        connection->set_attributes( i_carrid = 'LH' i_connid = '0400' ).
      CATCH cx_abap_invalid_value.
        out->write( 'Method call failed' ).
    ENDTRY.

*    connection->carrier_id = 'LH'.
*    connection->connection_id = '0400'.
*    lcl_connection=>conn_counter = lcl_connection=>conn_counter + 1.

    APPEND connection TO connections.

    connection = NEW #( ).
    TRY.
        connection->set_attributes( i_carrid = 'AA' i_connid = '0017' ).
      CATCH cx_abap_invalid_value.
        out->write( 'Method call failed' ).
    ENDTRY.
*    connection->carrier_id = 'AA'.
*    connection->connection_id = '0017'.
*    lcl_connection=>conn_counter = lcl_connection=>conn_counter + 1.

    APPEND connection TO connections.

    connection = NEW #( ).

    TRY.
        connection->set_attributes( i_carrid = 'AB' i_connid = '0013' ).
      CATCH cx_abap_invalid_value.
        out->write( 'Method call failed' ).
    ENDTRY.
*    connection->carrier_id = 'AB'.
*    connection->connection_id = '0013'.
*    lcl_connection=>conn_counter = lcl_connection=>conn_counter + 1.

    APPEND connection TO connections.

    connection = NEW #( ).

    TRY.
        connection->set_attributes( EXPORTING i_carrid = '' i_connid = 0 ).
      CATCH cx_abap_invalid_value.
        out->write( 'Method call failed' ).
    ENDTRY.
*    connection->carrier_id = 'AB'.
*    connection->connection_id = '0013'.
*    lcl_connection=>conn_counter = lcl_connection=>conn_counter + 1.

    APPEND connection TO connections.

    connection = NEW #( ).
    LOOP AT connections INTO connection.

      out->write( connection->get_output( ) ).

    ENDLOOP.








  ENDMETHOD.
ENDCLASS.